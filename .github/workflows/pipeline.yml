# The name of the workflow.
name: MERN CI/CD

# Define when the workflow should run (on push to the main branch).
on:
  push:
    branches:
      - main

# Define jobs for the workflow.
jobs:
  # Build job
  build:
    # Strategy for matrix builds with different Node.js versions
    strategy:
      matrix:
        node_version: [21]
        
    # Set the operating system for the job.
    runs-on: ubuntu-latest

    # Define steps to be executed as part of the job.
    steps:

      # Checkout the code from the GitHub repository.
      - name: Checkout Code
        uses: actions/checkout@v4

      # Install Node.js and npm.
      - name: Setup Node.js ${{ matrix.node_version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node_version }}

      # Install dependencies and build the client application.
      - name: Install Dependencies and Build Client
        working-directory: ./client
        run: |
          npm install
          npm run build

      # Install dependencies and prepare the server application.
      - name: Install Dependencies for Server
        working-directory: ./api
        run: |
          npm install

  # Server deployment job
  server:
    # Define dependencies on the build job
    needs: [build]
    
    # Set the operating system for the job.
    runs-on: ubuntu-latest
    
    # Define steps to be executed as part of the job.
    steps:
      # Checkout the code from the GitHub repository.
      - name: Checkout Code
        uses: actions/checkout@v2 
      
      # SSH and deploy to the server
      - name: Build & Deploy
        env:
          PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          HOSTNAME: ${{ secrets.SSH_HOST }}
          USER_NAME: ${{ secrets.USER_NAME }}
        run: |
          # Save the private key to a file and secure it
          echo "$PRIVATE_KEY" > private_key
          chmod 600 private_key
        
          # SSH into the server
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} << EOF
            # Navigate to the project directory and deploy
            cd /home/ubuntu/node-app-github-actions || { echo "Directory not found"; exit 1; }
            git pull origin main || { echo "Git pull failed"; exit 1; }
        
            # Install dependencies for the backend
            cd /home/ubuntu/node-app-github-actions/api || { echo "Backend directory not found"; exit 1; }
            npm install || { echo "Backend npm install failed"; exit 1; }
        
            # Install dependencies for the frontend
            cd /home/ubuntu/node-app-github-actions/client || { echo "Frontend directory not found"; exit 1; }
            npm install || { echo "Frontend npm install failed"; exit 1; }
        
            # Restart backend and frontend services
            pm2 restart node-backend || { echo "Failed to restart backend service"; exit 1; }
            pm2 restart vite-frontend || { echo "Failed to restart frontend service"; exit 1; }
          EOF
        
